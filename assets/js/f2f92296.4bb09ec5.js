"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7359],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),g=c(n),p=o,k=g["".concat(s,".").concat(p)]||g[p]||d[p]||l;return n?i.createElement(k,a(a({ref:t},u),{},{components:n})):i.createElement(k,a({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=p;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[g]="string"==typeof e?e:o,a[1]=r;for(var c=2;c<l;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const l={sidebar_position:8},a="Account system",r={unversionedId:"tkg-integration/sdk-basic/sdk-func-account",id:"version-3.0.x/tkg-integration/sdk-basic/sdk-func-account",title:"Account system",description:"Before\xa0integrating\xa0the\xa0account\xa0system,\xa0please\xa0confirm\xa0the\xa0timing\xa0of\xa0its\xa0appearance\xa0and\xa0choose\xa0the\xa0login\xa0methods\xa0you\xa0want\xa0to\xa0support.\xa0We\xa0offer\xa0guest\xa0login,\xa0email\xa0login,\xa0and\xa0third-party\xa0login\xa0methods.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-3.0.x/tkg-integration/sdk-basic/sdk-func-account.md",sourceDirName:"tkg-integration/sdk-basic",slug:"/tkg-integration/sdk-basic/sdk-func-account",permalink:"/tkg-sdk-doc/3.0.x/tkg-integration/sdk-basic/sdk-func-account",tags:[],version:"3.0.x",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"In App Purchase",permalink:"/tkg-sdk-doc/3.0.x/tkg-integration/sdk-basic/sdk-func-iap"},next:{title:"Advanced Integration",permalink:"/tkg-sdk-doc/3.0.x/tkg-integration/sdk-other-func"}},s={},c=[{value:"Login methods",id:"login-methods",level:2},{value:"Account system display timing",id:"account-system-display-timing",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Account login",id:"account-login",level:2},{value:"Account logout (Optional)",id:"account-logout-optional",level:2},{value:"Login Mode Query interface (Required)",id:"login-mode-query-interface-required",level:2},{value:"Account delete (Required)",id:"account-delete-required",level:2},{value:"Account Binding  (Optional)",id:"account-binding--optional",level:2},{value:"Forced binding   (Optional)",id:"forced-binding---optional",level:2},{value:"Q&amp;A",id:"qa",level:2}],u={toc:c},g="wrapper";function d(e){let{components:t,...l}=e;return(0,o.kt)(g,(0,i.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"account-system"},"Account system"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Before\xa0integrating\xa0the\xa0account\xa0system,\xa0please\xa0confirm\xa0the\xa0timing\xa0of\xa0its\xa0appearance\xa0and\xa0choose\xa0the\xa0login\xa0methods\xa0you\xa0want\xa0to\xa0support.\xa0We\xa0offer\xa0guest\xa0login,\xa0email\xa0login,\xa0and\xa0third-party\xa0login\xa0methods.",(0,o.kt)("br",{parentName:"p"}),"\n","Besides\xa0account\xa0login,\xa0we\xa0support\xa0account\xa0deletion\xa0(required),\xa0login\xa0type\xa0inquiry\xa0(required), logout,\xa0\xa0account\xa0binding,\xa0and\xa0forced\xa0binding.",(0,o.kt)("br",{parentName:"p"}),"\n","Touka SDK only provides the login interface, the login screen can be designed and created by developers according to the game's UI style.      "))),(0,o.kt)("h2",{id:"login-methods"},"Login methods"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Other account system logins: Guest login, Email login.      "),(0,o.kt)("li",{parentName:"ol"},"Third-party logins: Google login (Android only), Facebook login, Apple login (iOS only).      ")),(0,o.kt)("h2",{id:"account-system-display-timing"},"Account system display timing"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"After entering the game, the login screen is displayed directly. Players must complete the login by filling in/selecting the information to enter the game. ",(0,o.kt)("font",{color:"ff0000"},"\uff08Only show game login screen for the first time, and after times use the selected method to log in.\uff09"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{alt:"LoginLogic01",src:n(2842).Z,width:"1620",height:"560"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Players can enter the game immediately with guest silent login and bind their accounts at a suitable game position.    ",(0,o.kt)("font",{color:"ff0000"},"\uff08non-guest account enters game, the binding button don't display.\uff09"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{alt:"LoginLogic02",src:n(2391).Z,width:"1620",height:"508"}),"  "))),(0,o.kt)("h2",{id:"explanation"},"Explanation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Different UserIDs are returned for each login method: guest, Google, Facebook, Apple, and email.",(0,o.kt)("font",{color:"ff0000"},"\uff08The situation is unique when it comes to account binding.\uff09"),"          "),(0,o.kt)("li",{parentName:"ol"},"Note that login is called through the login interface, and after successful login, the binding of a guest account to a third-party account is done through the account binding interface. Only when the account binding interface is called will an internal binding operation for the guest account and third-party account be performed in the SDK.          "),(0,o.kt)("li",{parentName:"ol"},"After successful login of non-guest account types, no binding function is provided (i.e. the binding button is not displayed). After a successful guest account binding, the returned login type corresponds to the type of the third-party account that was bound, and the returned UserID is the same as the UserID returned during guest login.        ")),(0,o.kt)("h2",{id:"account-login"},"Account login"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.Login(LoginType.LOGIN_BY_GOOGLE, (loginStatus,  loginType,  loginMsg,  userId,  token,  email,  nickName,  iconUrl) =>{\n\n    Debug.Log("Login status code:"+loginStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("User ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nickName:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    \n});\n\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void Login(LoginType _loginType, Action<LoginStatus, LoginType, string, string, string, string,string,string> _loginResultCallback)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_loginType"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"Login type:",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GUESTER  (guester login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_EMAIL    (email login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GOOGLE   (Google login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_FACEBOOK (Facebook login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_Apple    (Apple login)",(0,o.kt)("br",null))),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_loginResultCallback"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Login callback:",(0,o.kt)("br",null),"loginStatus: Login status code(Binding successful\u3001Account already bound\uff0cNeed to select\u3001Binding failed\u3001Cancel binding)",(0,o.kt)("br",null),(0,o.kt)("br",null),"loginType: Login type",(0,o.kt)("font",{color:"ff0000"},"\uff08Use this result to determine the display of the bind button. Display only for guest logins.\uff09"),(0,o.kt)("br",null),(0,o.kt)("br",null),"loginMsg: Login status information(Text describes login reasons, not suggested for direct game use.)",(0,o.kt)("br",null),"userId: userid (UserID after binding)",(0,o.kt)("br",null),"token: token  (Can be used for server verification)",(0,o.kt)("br",null),"email: email  (Returns third-party account email)",(0,o.kt)("br",null),"nickName: nickName  (Returns third-party account nickname)",(0,o.kt)("br",null),"iconUrl: iconUrl  (Returns third-party account avatar URL)",(0,o.kt)("br",null)))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," Game login button diagram: "),"  ",(0,o.kt)("br",null),"\n",(0,o.kt)("img",{alt:"LoginPanel",src:n(407).Z,width:"320",height:"569"})),(0,o.kt)("h2",{id:"account-logout-optional"},"Account logout (Optional)"),(0,o.kt)("p",null,"The account logout interface can be called when the game switches accounts for logout operations. The SDK will callback the game upon account exit. No need to call if not required.      "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"TKGSDKManager.Instance.Logout();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void Logout(Action _logoutCallback = null)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_logoutCallback"),(0,o.kt)("td",null,"N"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Logout login callback"))),(0,o.kt)("h2",{id:"login-mode-query-interface-required"},"Login Mode Query interface (Required)"),(0,o.kt)("p",null,"SDK controls supported login types, returning a list to the game. Game must used the interface and game should adjust login/bind UI dynamically by this result."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"List<LoginType> list = TKGSDKManager.Instance.AvailableLoginChannelList();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"List<LoginType> AvailableLoginChannelList();\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"List <LoginType> "),(0,o.kt)("td",null,"Returns the currently available login type."))),(0,o.kt)("h2",{id:"account-delete-required"},"Account delete (Required)"),(0,o.kt)("p",null,"To enhance transparency and user data control, Google requires games with account login to offer account deletion.       "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Games must add a deletion button, clicking it invokes the SDK's deletion interface, no further action is needed.       "),(0,o.kt)("li",{parentName:"ul"},"The SDK then handles deletion, provides a callback to the game, and exits immediately. Reopening the game will resemble a new user entry.       "),(0,o.kt)("li",{parentName:"ul"},"The deletion flow includes: long-press 'OK' for 5 seconds until progress bar fills up, triggering a second confirmation. Click 'OK' to send the game callback, closing the game; 'Cancel' exits the deletion interface.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"TKGSDKManager.Instance.DeleteAccount();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"//DeleteStatus.DELETE_ACCOUNT_FAILED  delete fail\n//DeleteStatus.DELETE_ACCOUNT_CANCEL  delete cancel\n//DeleteStatus.DELETE_ACCOUNT_SUCC    delete success\n\nvoid DeleteAccount(Action<DeleteStatus,string> _deleteAccountCallback = null);\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_deleteAccountCallback"),(0,o.kt)("td",null,"N"),(0,o.kt)("td",null,"Action <DeleteStatus,string> "),(0,o.kt)("td",null,"Deleting an account callback returns the deleted userId & statusCode."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," SDK Account Deletion Interface Effect Diagram: "),"  ",(0,o.kt)("br",null),"\n",(0,o.kt)("img",{alt:"LoginPanel",src:n(665).Z,width:"800",height:"705"})),(0,o.kt)("h2",{id:"account-binding--optional"},"Account Binding  (Optional)"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Explanation")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},"The account binding function is used to bind guest accounts to third-party account services in the game.    "),(0,o.kt)("li",{parentName:"ol"},"Only guest accounts can be bound to third-party accounts. Once a guest account has been bound, it cannot be bound again. If the binding interface is called again, a 'already bound account' status code will be returned.    "),(0,o.kt)("li",{parentName:"ol"},"The game may hide the binding button after binding. The binding button should only be displayed when loginType in the callback is the guest login type.    "),(0,o.kt)("li",{parentName:"ol"},"After a guest account is bound to a third-party account, the returned UserID is still the UserID of the guest account; it's just that the two are bound together in SDK internally.    "),(0,o.kt)("li",{parentName:"ol"},"As long as the guest account hasn't been bound to a social account, it has the right to bind to a social account. If the social account has already been bound by another guest account, there is the right to force binding. This involves the forced binding interface.    "),(0,o.kt)("li",{parentName:"ol"},"When users use a social account that has been previously bound for the binding operation, the game can pop up an interface listing the two accounts and corresponding game progress for players to choose which account to bind. After the player selects, calling the force binding interface can be done.    ")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'\nTKGSDKManager.Instance.BindAccount(LoginType.LOGIN_BY_FACEBOOK,(bindAccountStatus,loginType,loginMsg,userId,token,email,nickName,iconUrl,userIdList)=> {\n\n    Debug.Log("bind account status:" + bindAccountStatus);\n    Debug.Log("login type:" + loginType);\n    Debug.Log("login message:" + loginMsg);\n    Debug.Log("user ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nick name:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    Debug.Log("userId list\uff1a"+userIdList);\n\n});\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void BindAccount(LoginType type,\n    Action<BindAccountStatus, LoginType, string, string, string, string, string, string, string[]>\n        _bindAccountCallback)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_loginType"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"Login type:",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GUESTER  (guester login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_EMAIL    (email login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GOOGLE   (Google login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_FACEBOOK (Facebook login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_Apple    (Apple login)",(0,o.kt)("br",null))),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_bindAccountCallback"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Binding callback\uff1a",(0,o.kt)("br",null),"bindAccountStatus\uff1abinding account status (Binding successful, Account already bound, Need to select, Binding failed, Cancel binding) ",(0,o.kt)("br",null),(0,o.kt)("br",null),"loginType\uff1alogin type",(0,o.kt)("font",{color:"ff0000"},"(Use this result to determine the display of the bind button. Display only for guest logins.)"),(0,o.kt)("br",null),(0,o.kt)("br",null),"loginMsg\uff1a login message(Text describes login reasons, not suggested for direct game use.)",(0,o.kt)("br",null),(0,o.kt)("br",null),"userId\uff1auserId (UserID after binding) ",(0,o.kt)("br",null),"token\uff1atoken (Can be used for server verification) ",(0,o.kt)("br",null),"email\uff1aemail (Returns third-party account email) ",(0,o.kt)("br",null),"nickName\uff1anick name (Returns third-party account nickname) ",(0,o.kt)("br",null),"iconUrl\uff1aicon url  (Returns third-party account avatar URL) ",(0,o.kt)("br",null),"userIdList\uff1auser id list(If binding an existing Google account, returns guest and Google UserIDs for choice; else, returns guest UserID post binding.)",(0,o.kt)("br",null)))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," Diagram of in-game account binding: "),"  ",(0,o.kt)("br",null),"\n",(0,o.kt)("img",{alt:"LoginPanel",src:n(6551).Z,width:"320",height:"569"})),(0,o.kt)("h2",{id:"forced-binding---optional"},"Forced binding   (Optional)"),(0,o.kt)("p",null,"When binding with an already-bound social account, the game shows two accounts for player choice. After selection, call the force binding interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'\nTKGSDKManager.Instance.ForceBindAccount("userId001",(bindAccountStatus,loginType,loginMsg,userId,token,email,nickName,iconUrl,userIdList)=> {\n\n    Debug.Log("Binding status code:" + bindAccountStatus);\n    Debug.Log("login type:" + loginType);\n    Debug.Log("login message:" + loginMsg);\n    Debug.Log("user ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nick name:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    Debug.Log("userId list\uff1a"+userIdList);\n\n});\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void ForceBindAccount(string userId,\n    Action<BindAccountStatus, LoginType, string, string, string, string, string, string, string[]>\n        _bindAccountCallback)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"userId"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"userId")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_bindAccountCallback"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Binding callback\uff1a",(0,o.kt)("br",null),"bindAccountStatus\uff1abinding account status(Binding successful, Account already bound, Need to select, Binding failed, Cancel binding)",(0,o.kt)("br",null),(0,o.kt)("br",null),"loginType\uff1alogin type(Use this result to determine the display of the bind button. Display only for guest logins.)",(0,o.kt)("br",null),(0,o.kt)("br",null),"loginMsg\uff1a login message(Text describes login reasons, not suggested for direct game use.)",(0,o.kt)("br",null),(0,o.kt)("br",null),"userId\uff1auserId(UserID after binding)",(0,o.kt)("br",null),"token\uff1atoken  (Can be used for server verification)",(0,o.kt)("br",null),"email\uff1aemail (Returns third-party account email) ",(0,o.kt)("br",null),"nickName\uff1anick name (Returns third-party account nickname) ",(0,o.kt)("br",null),"iconUrl\uff1aicon url (Returns third-party account avatar URL)",(0,o.kt)("br",null),"userIdList\uff1auser id list (If binding an existing Google account, returns guest and Google UserIDs for choice; else, returns guest UserID post binding.) ",(0,o.kt)("br",null)))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," Diagram of in-game screen for choosing account to bind: "),"  ",(0,o.kt)("br",null),"\n",(0,o.kt)("img",{alt:"LoginPanel",src:n(4524).Z,width:"320",height:"569"})),(0,o.kt)("h2",{id:"qa"},"Q&A"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1.\xa0Can\xa0one\xa0Google\xa0account\xa0correspond\xa0to\xa0multiple\xa0game\xa0accounts?"),"\nNo.\xa0One\xa0Google\xa0account\xa0can\xa0only\xa0correspond\xa0to\xa0one\xa0game\xa0account.    "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2.\xa0If\xa0guest\xa0login\xa0is\xa0called\xa0first,\xa0then\xa0Google\xa0login,\xa0will\xa0guest\xa0and\xa0Google\xa0accounts\xa0bind?"),"No.\xa0This\xa0procedure\xa0will\xa0return\xa0a\xa0new\xa0UserID\xa0for\xa0a\xa0new\xa0account.\xa0Binding\xa0only\xa0occurs\xa0when\xa0the\xa0binding\xa0interface\xa0is\xa0called,\xa0returning\xa0the\xa0same\xa0UserID,\xa0specifically\xa0the\xa0guest\xa0account's\xa0UserID,\xa0using\xa0the\xa0same\xa0gaming\xa0process.\xa0However,\xa0guest\xa0UserIDs\xa0are\xa0device-dependent.\xa0If\xa0the\xa0device\xa0ID\xa0changes,\xa0the\xa0unbound\xa0guest\xa0account\xa0could\xa0be\xa0lost."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3.\xa0If\xa0I\xa0log\xa0in\xa0as\xa0a\xa0guest\xa0and\xa0return\xa0UserID1,\xa0then\xa0choose\xa0to\xa0bind\xa0the\xa0Google\xa0account\xa0after\xa0making\xa0progress,\xa0will\xa0my\xa0UserID\xa0change?"),(0,o.kt)("br",{parentName:"p"}),"\n","No.\xa0After\xa0binding,\xa0it\xa0will\xa0remain\xa0as\xa0UserID1.\xa0The\xa0SDK\xa0only\xa0performs\xa0an\xa0internal\xa0binding\xa0while\xa0keeping\xa0the\xa0original\xa0guest\xa0UserID.    "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4.\xa0If\xa0I\xa0choose\xa0Google\xa0login\xa0when\xa0entering\xa0the\xa0game,\xa0make\xa0progress,\xa0then\xa0re-enter\xa0and\xa0choose\xa0guest\xa0login,\xa0then\xa0bind\xa0the\xa0Google\xa0account,\xa0what\xa0will\xa0happen?"),(0,o.kt)("br",{parentName:"p"}),"\n","When\xa0binding\xa0a\xa0Google\xa0account\xa0with\xa0game\xa0progress,\xa0the\xa0SDK\xa0will\xa0return\xa0two\xa0UserIDs\xa0to\xa0the\xa0game:\xa0the\xa0current\xa0guest\xa0account\xa0UserID\xa0and\xa0the\xa0UserID\xa0associated\xa0with\xa0the\xa0Google\xa0account.\xa0The\xa0game\xa0can\xa0produce\xa0an\xa0interface\xa0for\xa0the\xa0player\xa0to\xa0choose\xa0which\xa0game\xa0progress\xa0UserID\xa0they\xa0want\xa0to\xa0bind\xa0to\xa0their\xa0Google\xa0account,\xa0which\xa0is\xa0then\xa0passed\xa0to\xa0the\xa0SDK\xa0for\xa0force\xa0binding.      "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"5.\xa0For\xa0games\xa0that\xa0by\xa0default\xa0use\xa0guest\xa0login,\xa0if\xa0I\xa0play\xa0and\xa0bind\xa0my\xa0only\xa0Google\xa0account\xa0on\xa0device\xa0A,\xa0then\xa0play\xa0and\xa0try\xa0to\xa0bind\xa0with\xa0the\xa0same\xa0Google\xa0account\xa0on\xa0device\xa0B,\xa0what\xa0will\xa0happen?"),(0,o.kt)("br",{parentName:"p"}),"\n","This\xa0situation\xa0is\xa0the\xa0same\xa0as\xa0number\xa04,\xa0both\xa0involve\xa0binding\xa0an\xa0existing\xa0Google\xa0account.  "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"6.\xa0Will\xa0newly\xa0generated\xa0UserIDs\xa0be\xa0duplicated?"),(0,o.kt)("br",{parentName:"p"}),"\n","No.\xa0Newly\xa0generated\xa0UserIDs\xa0are\xa0unique\xa0and\xa0will\xa0not\xa0duplicate."))}d.isMDXComponent=!0},407:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/01login-7d1064f761d0950848ddf93144da03cd.jpg"},6551:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/02bind-9d9976119ec934322f1c39607389b5f9.jpg"},665:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/03delete_01-b0eecd889da66594d1bdd87971f14add.jpeg"},4524:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/04forcebind-c266e92493c5bc0fafb5be20e3747202.jpg"},2842:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/login01_en-54ea97d6e613fb6d6d57d60a8cbe3779.jpeg"},2391:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/login02_en-af29cb19ea28e109e7ac3d89265b8c0a.jpeg"}}]);