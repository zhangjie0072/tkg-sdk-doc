"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[530],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),s=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),k=a,p=d["".concat(u,".").concat(k)]||d[k]||g[k]||r;return n?l.createElement(p,i(i({ref:t},c),{},{components:n})):l.createElement(p,i({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8073:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var l=n(7462),a=(n(7294),n(3905));const r={title:"Basic API",sidebar_label:"Basic API",description:"",sidebar_position:97},i=void 0,o={unversionedId:"api/common-api",id:"version-3.1.x/api/common-api",title:"Basic API",description:"",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-3.1.x/api/common-api.md",sourceDirName:"api",slug:"/api/common-api",permalink:"/tkg-sdk-doc/api/common-api",tags:[],version:"3.1.x",sidebarPosition:97,frontMatter:{title:"Basic API",sidebar_label:"Basic API",description:"",sidebar_position:97},sidebar:"apiSidebar",next:{title:"Advanced API",permalink:"/tkg-sdk-doc/api/advance-api"}},u={},s=[{value:"1 Init",id:"1-init",level:2},{value:"1.1 InitSDK",id:"11-initsdk",level:3},{value:"2 Compliance Popup",id:"2-compliance-popup",level:2},{value:"2.1 Sample code",id:"21-sample-code",level:3},{value:"3 Advertising integration",id:"3-advertising-integration",level:2},{value:"3.1 InterstitialAd",id:"31-interstitialad",level:3},{value:"3.1.1 Sample code",id:"311-sample-code",level:4},{value:"3.2 RewardAd",id:"32-rewardad",level:3},{value:"3.2.1 Sample code",id:"321-sample-code",level:4},{value:"3.3 Splash Ad",id:"33-splash-ad",level:3},{value:"3.4 Native ad",id:"34-native-ad",level:3},{value:"3.4.1 Sample code",id:"341-sample-code",level:4},{value:"3.5 Banner ad",id:"35-banner-ad",level:3},{value:"3.5.1 Sample code",id:"351-sample-code",level:4},{value:"4 Event Tracking",id:"4-event-tracking",level:2},{value:"4.1 Level Progression Events",id:"41-level-progression-events",level:3},{value:"4.1.1 LevelStart",id:"411-levelstart",level:4},{value:"4.1.2 LevelEnd",id:"412-levelend",level:4},{value:"4.2 Custom Event",id:"42-custom-event",level:3},{value:"4.2.1 Sample code",id:"421-sample-code",level:4},{value:'5 Purchase <font color="#ff0000">(v3.0.4 new)</font>',id:"5-purchase-v304-new",level:2},{value:"5.1 Macro:",id:"51-macro",level:3},{value:"5.2 Product ID:",id:"52-product-id",level:3},{value:"5.3 Add purchase callback:",id:"53-add-purchase-callback",level:3},{value:"5.4 In App Purchase interface:",id:"54-in-app-purchase-interface",level:3},{value:"5.5 In App Purchase event",id:"55-in-app-purchase-event",level:3},{value:"5.5.1 Sample code",id:"551-sample-code",level:4},{value:"5.6 Gets the localized price string",id:"56-gets-the-localized-price-string",level:3},{value:'6 Account system<font color="#ff0000">(v3.0.5 new)</font>',id:"6-account-systemv305-new",level:2},{value:"6.1 Sample code:",id:"61-sample-code",level:4}],c={toc:s},d="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"1-init"},"1 Init"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"InitSDK"),(0,a.kt)("td",null,"(Action _initCallback = null)"),(0,a.kt)("td",null,"SDK Init",(0,a.kt)("br",null),"_initCallback: Initialization finished callback."))),(0,a.kt)("h3",{id:"11-initsdk"},"1.1 InitSDK"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.InitSDK(initCallback);\nprivate void initCallback()\n{\n    Debug.Log("init callback");\n}  \n')),(0,a.kt)("h2",{id:"2-compliance-popup"},"2 Compliance Popup"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OpenPolicyPop"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Opens a Compliance popup in the current process"))),(0,a.kt)("h3",{id:"21-sample-code"},"2.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"TKGSDKManager.Instance.OpenPolicyPop();\n")),(0,a.kt)("h2",{id:"3-advertising-integration"},"3 Advertising integration"),(0,a.kt)("h3",{id:"31-interstitialad"},"3.1 InterstitialAd"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ShowInterstitialAd"),(0,a.kt)("td",null,"(TKGIVAdPositionName _adPos, Action _callback = null, IVADType _IvType = IVADType.IV1)"),(0,a.kt)("td",null,"Show Interstitial Ad",(0,a.kt)("br",null),(0,a.kt)("br",null),"_adPos: Name of interstitial ad placement.\uff08Please define the TKGIVAdPositionName first\uff09",(0,a.kt)("br",null),"_callback: Callback of ad close and playback fail.",(0,a.kt)("br",null),"_IvType: Type of frequency control",(0,a.kt)("br",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"IsReadyInterstitialAd"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Whether InterstitialAd can be displayed.",(0,a.kt)("br",null),"General games do not need to call by themselves."))),(0,a.kt)("h4",{id:"311-sample-code"},"3.1.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"// show interstitial ad\nTKGSDKManager.Instance.ShowInterstitialAd(TKGIVAdPositionName.IV_Retry);\n\n// is ready interstitial ad\nbool isReadyIV = TKGSDKManager.Instance.IsReadyInterstitialAd();\n")),(0,a.kt)("h3",{id:"32-rewardad"},"3.2 RewardAd"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ShowRewardAd"),(0,a.kt)("td",null,"(TKGRVPositionName _adPos, Action<bool> _rewardCallback = null, Action _showFailedCallback = null, bool _showSDKToast = false)"),(0,a.kt)("td",null,"Show RewardAd",(0,a.kt)("br",null),(0,a.kt)("br",null),"_adPos: Name of reward ad placement.\uff08Please define the TKGRVPositionName first.\uff09",(0,a.kt)("br",null),"_rewardCallback: Callback for reward.(Recommended developers issue rewards in this callback.)",(0,a.kt)("br",null),"_showFailedCallback: Callback of ad close and playback fail.",(0,a.kt)("br",null),"_showSDKToast: Whether to use the SDK to prompt the video presentation failure page. true:Use the failure page provided by the SDK. false:Do not use the failure notification page provided by the SDK.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"IsReadyRewardAd"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Whether RewardAd can be displayed.",(0,a.kt)("br",null),"General games do not need to call by themselves."))),(0,a.kt)("h4",{id:"321-sample-code"},"3.2.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'// show reward ad\nTKGSDKManager.Instance.ShowRewardAd(TKGRVPositionName.RV_GetDoubleCoin, RewardResult);\n\nprivate void RewardResult(bool _bReward)\n{\n    Debug.Log("[ToukaSDKDemo] Reward result\uff1a" + _bReward);\n}\n\n// is ready reward ad\nbool isReadyRV = TKGSDKManager.Instance. IsReadyRewardAd();\n')),(0,a.kt)("h3",{id:"33-splash-ad"},"3.3 Splash Ad"),(0,a.kt)("p",null,"No need to do anything to access Splash Ads.    ",(0,a.kt)("br",null)," "),(0,a.kt)("h3",{id:"34-native-ad"},"3.4 Native ad"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ShowNative"),(0,a.kt)("td",null,'(RectTransform pRect, Camera pCam = null, string pAdPos = "")'),(0,a.kt)("td",null,"Show Native Ad",(0,a.kt)("br",null),(0,a.kt)("br",null),"pRect: Native advertising display location",(0,a.kt)("br",null),"pCam: If the UI uses camera mode, you must use an orthogonal camera",(0,a.kt)("br",null),"pAdPos: display native AD point name",(0,a.kt)("br",null))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"IsReadyNativeAd"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Whether NativeAd can be displayed.",(0,a.kt)("br",null),"General games do not need to call by themselves."))),(0,a.kt)("h4",{id:"341-sample-code"},"3.4.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"// show native ad\nTKGSDKManager.Instance.ShowNative(nativeImage.rectTransform);\n\n// is ready native ad\nbool isReadyNative = TKGSDKManager.Instance.IsReadyNativeAd();\n")),(0,a.kt)("h3",{id:"35-banner-ad"},"3.5 Banner ad"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ShowBanner"),(0,a.kt)("td",null,"(TKGBannerAlign _bannerAlign)"),(0,a.kt)("td",null,"Show Banner ad",(0,a.kt)("br",null),(0,a.kt)("br",null),"Display banner ad",(0,a.kt)("br",null),"_bannerAlign: the position displayed by the banner AD.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"HideBanner"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Hide Banner Ad.",(0,a.kt)("br",null)))),(0,a.kt)("h4",{id:"351-sample-code"},"3.5.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"// show banner ad\nTKGSDKManager.Instance.ShowBanner(TKGBannerAlign.BannerCenterBottomAlign);\n\n// hide ad\nTKGSDKManager.Instance.HideBanner();\n")),(0,a.kt)("h2",{id:"4-event-tracking"},"4 Event Tracking"),(0,a.kt)("h3",{id:"41-level-progression-events"},"4.1 Level Progression Events"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LevelStart"),(0,a.kt)("td",null,"(int _level)  ",(0,a.kt)("br",null),"(string _level)"),(0,a.kt)("td",null,"Level Start",(0,a.kt)("br",null),"_level: current level id.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LevelEnd"),(0,a.kt)("td",null,"(int _level, StageResult _stageResult)",(0,a.kt)("br",null),"(string _level, StageResult _stageResult)"),(0,a.kt)("td",null,"Level End    ",(0,a.kt)("br",null),"_level: current level id. ",(0,a.kt)("br",null),"_stageResult: level result ",(0,a.kt)("br",null),(0,a.kt)("br",null),"StageResult : StageSucc / StageFail / retry in level: StageRetry / back in level: StageBack"))),(0,a.kt)("h4",{id:"411-levelstart"},"4.1.1 LevelStart"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.LevelStart(1);\nTKGSDKManager.Instance.LevelStart("S_1");\n')),(0,a.kt)("h4",{id:"412-levelend"},"4.1.2 LevelEnd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.LevelEnd(1, StageResult.StageSucc);\nTKGSDKManager.Instance.LevelEnd("S_1", StageResult.StageFail);\nTKGSDKManager.Instance.LevelEnd(3, StageResult.StageRetry);\nTKGSDKManager.Instance.LevelEnd("S_2", StageResult.StageBack);\n')),(0,a.kt)("h3",{id:"42-custom-event"},"4.2 Custom Event"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LogEvent"),(0,a.kt)("td",null,"(string _eventSort) "),(0,a.kt)("td",null,"Report game tracking event ",(0,a.kt)("br",null),"(the number of parameters is different) ")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LogEvent"),(0,a.kt)("td",null,"(string _eventSort, string _key, string _value) "),(0,a.kt)("td",null,"same as above ")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LogEvent"),(0,a.kt)("td",null,"(string _eventSort, string _key01, string _value01, string _key02, string _value02) "),(0,a.kt)("td",null,"same as above ")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LogEvent"),(0,a.kt)("td",null,"(string _eventSort, Dictionary<string, string> _eventDic = null) "),(0,a.kt)("td",null,"same as above "))),(0,a.kt)("h4",{id:"421-sample-code"},"4.2.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.LogEvent("click_Skin");\nTKGSDKManager.Instance.LogEvent("get_gift", "stage_level", "1");\nTKGSDKManager.Instance.LogEvent("stage_end", "stage_level", "1", "stage_status", "success");\n')),(0,a.kt)("h2",{id:"5-purchase-v304-new"},"5 Purchase ",(0,a.kt)("font",{color:"#ff0000"},"(v3.0.4 new)")),(0,a.kt)("h3",{id:"51-macro"},"5.1 Macro:"),(0,a.kt)("p",null,"   Add macro definition:    ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("font",{color:"#ff0000"},"  USE_IAP"))),(0,a.kt)("h3",{id:"52-product-id"},"5.2 Product ID:"),(0,a.kt)("p",null,"Add the product ID to the IAPProducts.cs file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'public const string NoAds = "test.tremoveads";\n\npublic static readonly Dictionary<string, ProductType> ProductDic = new Dictionary<string, ProductType>()\n{\n    // ProductType.NonConsumable  only buy once. Good for one-time purchases, such as extra levels\n    // ProductType.Consumable     can be purchased repeatedly. Suitable for consumable goods such as virtual currency\n    // ProductType.Subscription   can be purchased and restored repeatedly. Durable goods, but for a limited period (subscription)\n    \n    { NoAds, ProductType.NonConsumable}\n        \n};\n')),(0,a.kt)("h3",{id:"53-add-purchase-callback"},"5.3 Add purchase callback:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"\nIAPTool.Instance.OnPurchaseDone += OnPurchaseResult;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"private void OnPurchaseResult(string pID, bool pResult)\n{\n    if (pID.Equals(IAPProducts.NoAds) && pResult)\n    {\n        // After successful internal purchase, remove advertising.\n        TKGSDKManager.Instance.IsRemoveAds = true;\n    }\n}\n")),(0,a.kt)("h3",{id:"54-in-app-purchase-interface"},"5.4 In App Purchase interface:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"IAPTool.Instance.BuyProductByID(IAPProducts.NoAds);\n")),(0,a.kt)("h3",{id:"55-in-app-purchase-event"},"5.5 In App Purchase event"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"LogIAPBtnShow"),(0,a.kt)("td",null,"(string _iap, ",(0,a.kt)("br",null),"string _id"),(0,a.kt)("td",null,"In-purchase button display",(0,a.kt)("br",null),"_iap : Custom product name on the game side",(0,a.kt)("br",null),"_id : Product ID",(0,a.kt)("br",null)))),(0,a.kt)("h4",{id:"551-sample-code"},"5.5.1 Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'// Call when the in-purchase button is displayed\nTKGSDKManager.Instance.LogIAPBtnShow("200Diamond","com.game.diamond200");\n')),(0,a.kt)("h3",{id:"56-gets-the-localized-price-string"},"5.6 Gets the localized price string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"// Returns a price string with a currency symbol, such as '$1.99' '\uffe56.99'\nstring price = TKGSDKManager.Instance.GetPriceByID(\"com.tkkk.unitysdk.demo.a1\");\n")),(0,a.kt)("h2",{id:"6-account-systemv305-new"},"6 Account system",(0,a.kt)("font",{color:"#ff0000"},"(v3.0.5 new)")),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"API"),(0,a.kt)("td",null,"Parameter"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Login"),(0,a.kt)("td",null," (LoginType _loginType, Action<LoginStatus, LoginType, string, string, string, string,string,string> _loginResultCallback)"),(0,a.kt)("td",null,"Account login",(0,a.kt)("br",null),"_loginType\uff1aLogin type _loginResultCallback\uff1aLogin callback")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Logout"),(0,a.kt)("td",null," (Action _logoutCallback = null)"),(0,a.kt)("td",null,"Account logout",(0,a.kt)("br",null),"_logoutCallback\uff1aLogout callback")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"AvailableLoginChannelList"),(0,a.kt)("td",null," -"),(0,a.kt)("td",null,"Returns the currently available login method")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"DeleteAccount"),(0,a.kt)("td",null," (Action<string> _deleteAccountCallback = null)"),(0,a.kt)("td",null,"Account deletion",(0,a.kt)("br",null),"_deleteAccountCallback\uff1aThe account deletion callback returns the deleted userId")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"BindAccount"),(0,a.kt)("td",null," (LoginType type, Action<BindAccountStatus, LoginType, string, string, string, string, string, string, string[]> _bindAccountCallback)"),(0,a.kt)("td",null,"Account binding",(0,a.kt)("br",null),"_loginType\uff1aLogin type _loginResultCallback\uff1abinding callback")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"ForceBindAccount"),(0,a.kt)("td",null," (string userId,Action<BindAccountStatus, LoginType, string, string, string, string, string, string, string[]> _bindAccountCallback)"),(0,a.kt)("td",null,"Mandatory account binding",(0,a.kt)("br",null),"_userId\uff1auser ID _bindAccountCallback\uff1aBind a callback forcibly")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"AutoLogin"),(0,a.kt)("td",null," (Action<LoginStatus, LoginType, string, string, string, string,string,string< _loginResultCallback)"),(0,a.kt)("td",null,"Auto Login",(0,a.kt)("font",{color:"#ff0000"},"(v3.1.0new)"),(0,a.kt)("br",null),"_loginResultCallback\uff1aLogin callback")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"GetAccountType"),(0,a.kt)("td",null," - "),(0,a.kt)("td",null,"Returns the currently user login type",(0,a.kt)("font",{color:"#ff0000"},"(v3.1.0new)"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"IsCanAutoLogin"),(0,a.kt)("td",null," - "),(0,a.kt)("td",null,"Returns whether the automatic login interface can be called for login.",(0,a.kt)("font",{color:"#ff0000"},"(v3.1.0new)")))),(0,a.kt)("h4",{id:"61-sample-code"},"6.1 Sample code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'\n// Account login\nTKGSDKManager.Instance.Login(LoginType.LOGIN_BY_GOOGLE, (loginStatus,  loginType,  loginMsg,  userId,  token,  email,  nickName,  iconUrl) =>{\n\n    Debug.Log("Login status code:"+loginStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("User ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nickName:" + nickName);\n    Debug.Log("iconUrl" + iconUrl);\n    \n});\n\n// Account logout\nTKGSDKManager.Instance.Logout();\n\n// Example Query the available login methods\nList<LoginType> list = TKGSDKManager.Instance.AvailableLoginChannelList();\n\n// Delete current account\nTKGSDKManager.Instance.DeleteAccount();\n\n// Account binding\nTKGSDKManager.Instance.BindAccount(LoginType.LOGIN_BY_GOOGLE,(bindAccountStatus,loginType,loginMsg,userId,token,email,nickName,iconUrl,userIdList)=> {\n\n    Debug.Log("Binding status code:" + bindAccountStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("user ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nick name:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    Debug.Log("userId list\uff1a"+userIdList);\n\n});\n\n// Mandatory account binding\nTKGSDKManager.Instance.ForceBindAccount("userId001",(bindAccountStatus,loginType,loginMsg,userId,token,email,nickName,iconUrl,userIdList)=> {\n\n    Debug.Log("Binding status code:" + bindAccountStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("user ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nick name:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    Debug.Log("userId list\uff1a"+userIdList);\n\n});\n\n// AutoLogin\nTKGSDKManager.Instance.AutoLogin((loginStatus,  loginType,  loginMsg,  userId,  token,  email,  nickName,  iconUrl) =>{\n\n    Debug.Log("Login status code:"+loginStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("User ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nickName:" + nickName);\n    Debug.Log("iconUrl" + iconUrl);\n    \n});\n\n// Returns the currently user login type\nLoginType accountType = TKGSDKManager.Instance.GetAccountType();\n\n// Returns whether the automatic login interface can be called for login.\nbool isCanAutoLogin = TKGSDKManager.Instance.IsCanAutoLogin();\n')))}g.isMDXComponent=!0}}]);